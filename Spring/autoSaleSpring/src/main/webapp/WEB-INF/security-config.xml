<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <http auto-config="true">
        <intercept-url pattern="/**/signUp" access="isAnonymous()"/>
        <intercept-url pattern="/signOut" access="isAnonymous()"/>
        <intercept-url pattern="/signIn" access="isAnonymous()"/>
        <intercept-url pattern="/" access="permitAll()"/>
        <intercept-url pattern="/images/**" access="permitAll()"/>
        <intercept-url pattern="/**/allOffers" access="permitAll()"/>
        <intercept-url pattern="/**/lastAddedOffers" access="permitAll()"/>
        <intercept-url pattern="/**/withPhoto" access="permitAll()"/>
        <intercept-url pattern="/**/withBrands" access="permitAll()"/>
        <intercept-url pattern="/**/offer" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/**/uploadFile" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/**/offerSellStatusValue " access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>

        <form-login login-page="/signIn"
                    authentication-failure-url="/signIn?error=error"
                    username-parameter="username"
                    password-parameter="password"
                    login-processing-url="/signIn"
        />
        <logout logout-success-url="/signIn" logout-url="/signOut" invalidate-session="true"/>
        <csrf disabled="true"/>
    </http>

    <beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select name, password, enabled from users where name=?"
                               authorities-by-username-query="select u.name, r.name from roles as r
                               inner join users as u  on u.fk_role_id=r.id where u.name=?"/>
            <password-encoder ref="bCryptPasswordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="delegatingFilterProxy" class="org.springframework.web.filter.DelegatingFilterProxy"/>
</beans:beans>